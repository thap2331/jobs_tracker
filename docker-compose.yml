version: '3.9'

services:
  prod_entrypoint:
    container_name: prod_box
    build:
      context: .
      dockerfile: setup/Dockerfile.setup
    environment:
      run_mode: ${run_mode}
    volumes:
      - ./:/app
    depends_on:
      - prod_database
    restart: on-failure
    networks:
      - jt_network

  test_entrypoint:
    container_name: test_box
    build:
      context: .
      dockerfile: setup/Dockerfile.setup
    environment:
      run_mode: ${run_mode}
    volumes:
      - ./:/app
    depends_on:
      test_database:
        condition: "service_healthy"
    restart: on-failure
    networks:
      - jt_network

  prod_database:
    container_name: jt_pg_container
    image: postgres:14.6
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: pass
      POSTGRES_DB: jt_db
    volumes:
       - jt_pg_vol_prod:/var/lib/postgresql/data
    ports:
      - 5432:5432
    networks:
      - jt_network

  test_database:
    container_name: test_jt_pg_container
    image: postgres:14.6
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: pass
      POSTGRES_DB: test_jt_db
    volumes:
       - jt_pg_vol_test:/var/lib/postgresql/data
    ports:
      - "5433:5432"
    networks:
      - jt_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d test_jt_db -p 5432 -h test_jt_pg_container"]
      interval: 3s
      timeout: 3s
      retries: 5

  frontend:
    container_name: jt_frontend
    build:
      context: .
      dockerfile: Dockerfile.frontend
    volumes:
      - ./frontend:/app/frontend
      - ./database:/app/frontend/database
      - ./utils:/app/frontend/utils
      - jt_pg_vol_prod:/var/lib/postgresql/data
      - jt_pg_vol_test:/var/lib/postgresql/data
    restart: on-failure
    ports:
      - '5000:5000'
    environment:
      run_mode: ${run_mode}
    networks:
      - jt_network

volumes:
  jt_pg_vol_prod:
    name: jt_pg_vol_prod
  jt_pg_vol_test:
    name: jt_pg_vol_test

networks:
  jt_network:
    name: jt_network