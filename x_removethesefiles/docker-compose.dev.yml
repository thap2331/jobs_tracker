version: '3.8'

services:
  database:
    container_name: pg_db
    image: postgres:14.6
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: pass
      POSTGRES_DB: jt_db
    volumes:
       - pg_vol:/var/lib/postgresql/data
    ports:
      - 5432:5432

  # crawl:
  #   container_name: crawlbox
  #   build:
  #     context: .
  #     dockerfile: Dockerfile.crawl
  #   volumes:
  #     - pg_vol:/pgdata/data
  #   links:
  #     - database
    # depends_on:
    #   - database   

  frontend:
    container_name: flask_frontend
    build:
      context: .
      dockerfile: Dockerfile.frontend
    volumes:
      - pg_vol:/var/lib/postgresql/data
    ports:
      - '5000:5000'
    environment:
      run_mode: ${run_mode}
    links:
      - database
    depends_on:
      - database
    # command: bash -c "bash shell_scripts/initialize.sh" 

    # container_name: sqlite3_container
    # # image: keinos/sqlite3:3.40.1
    # build:
    #   context: .
    #   dockerfile: Dockerfile.database
    # volumes:
    #   # - "$(pwd)"/database/:/fuckthis
    #   # - sqlite_vol:/etc/
    #   - type: volume
    #     source: sqlite_vol
    #     target: /db
    # ports:
      # - '9000:9000'
    # command:
    #   - "jobs.db"
  # crawl:
  #   container_name: scraping_container
  #   image: python:3.10.9-slim-buster
    # volumes: 
    #   - sqlite_vol:/database/jobs.db

# docker run --rm -it -v "$(pwd)/database/:/fuckthis" -w /fuckthis keinos/sqlite3:3.40.1
# docker run --rm -it --mount type=bind,source="$(pwd)"/database,target=/fuckthis -w /fuckthis keinos/sqlite3:3.40.1
      # - sqlite_vol:/database
      # - sqlite_vol:/database/jobs.db

volumes:
  pg_vol: